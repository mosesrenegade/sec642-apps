{"version":3,"sources":["index.js"],"names":["LoginForm","props","_this","Object","_home_moses_projects_sec642_example_apps_lab_hpp_ruby_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_super","call","handleChange","_ref","target","formValues","state","name","value","setState","handleValidation","fieldValidationErrors","formErrors","validity","formValidity","isEmail","isPassword","length","concat","test","handleSubmit","event","preventDefault","isSubmitting","_this$state","values","every","Boolean","alert","key","email","password","_this$state2","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","onSubmit","type","placeholder","onChange","disabled","React","Component","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.1f29ad0e.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      formValues: {\n        email: \"\",\n        password: \"\"\n      },\n      formErrors: {\n        email: \"\",\n        password: \"\"\n      },\n      formValidity: {\n        email: false,\n        password: false\n      },\n      isSubmitting: false\n    };\n  }\n\n  handleChange = ({ target }) => {\n    const { formValues } = this.state;\n    formValues[target.name] = target.value;\n    this.setState({ formValues });\n    this.handleValidation(target);\n  };\n\n  handleValidation = target => {\n    const { name, value } = target;\n    const fieldValidationErrors = this.state.formErrors;\n    const validity = this.state.formValidity;\n    const isEmail = name === \"email\";\n    const isPassword = name === \"password\";\n    const emailTest = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\n\n    validity[name] = value.length > 0;\n    fieldValidationErrors[name] = validity[name]\n      ? \"\"\n      : `${name} is required and cannot be empty`;\n\n    if (validity[name]) {\n      if (isEmail) {\n        validity[name] = emailTest.test(value);\n        fieldValidationErrors[name] = validity[name]\n          ? \"\"\n          : `${name} should be a valid email address`;\n      }\n      if (isPassword) {\n        validity[name] = value.length >= 3;\n        fieldValidationErrors[name] = validity[name]\n          ? \"\"\n          : `${name} should be 3 characters minimum`;\n      }\n    }\n\n    this.setState({\n      formErrors: fieldValidationErrors,\n      formValidity: validity\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.setState({ isSubmitting: true });\n    const { formValues, formValidity } = this.state;\n    if (Object.values(formValidity).every(Boolean)) {\n      alert(\"Form is validated! Submitting the form...\");\n      this.setState({ isSubmitting: false });\n    } else {\n      for (let key in formValues) {\n        let target = {\n          name: key,\n          value: formValues[key]\n        };\n        this.handleValidation(target);\n      }\n      this.setState({ isSubmitting: false });\n    }\n  };\n\n  render() {\n    const { formValues, formErrors, isSubmitting } = this.state;\n    return (\n      <div className=\"container\">\n        <div className=\"row mb-5\">\n          <div className=\"col-lg-12 text-center\">\n            <h1 className=\"mt-5\">Login Form</h1>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-lg-12\">\n            <form onSubmit={this.handleSubmit}>\n              <div className=\"form-group\">\n                <label>Email address</label>\n                <input\n                  type=\"email\"\n                  name=\"email\"\n                  className={`form-control ${\n                    formErrors.email ? \"is-invalid\" : \"\"\n                  }`}\n                  placeholder=\"Enter email\"\n                  onChange={this.handleChange}\n                  value={formValues.email}\n                />\n                <div className=\"invalid-feedback\">{formErrors.email}</div>\n              </div>\n              <div className=\"form-group\">\n                <label>Password</label>\n                <input\n                  type=\"password\"\n                  name=\"password\"\n                  className={`form-control ${\n                    formErrors.password ? \"is-invalid\" : \"\"\n                  }`}\n                  placeholder=\"Password\"\n                  onChange={this.handleChange}\n                  value={formValues.password}\n                />\n                <div className=\"invalid-feedback\">{formErrors.password}</div>\n              </div>\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary btn-block\"\n                disabled={isSubmitting}\n              >\n                {isSubmitting ? \"Please wait...\" : \"Submit\"}\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<LoginForm />, rootElement);\n\n"],"sourceRoot":""}