{"ast":null,"code":"import _classCallCheck from \"/home/moses/projects/sec642-example-apps/lab-hpp/ruby/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/moses/projects/sec642-example-apps/lab-hpp/ruby/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/moses/projects/sec642-example-apps/lab-hpp/ruby/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/moses/projects/sec642-example-apps/lab-hpp/ruby/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/moses/projects/sec642-example-apps/lab-hpp/ruby/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/home/moses/projects/sec642-example-apps/lab-hpp/ruby/src/index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nvar LoginForm = /*#__PURE__*/function (_React$Component) {\n  _inherits(LoginForm, _React$Component);\n\n  var _super = _createSuper(LoginForm);\n\n  function LoginForm(props) {\n    var _this;\n\n    _classCallCheck(this, LoginForm);\n\n    _this = _super.call(this, props);\n\n    _this.handleChange = function (_ref) {\n      var target = _ref.target;\n      var formValues = _this.state.formValues;\n      formValues[target.name] = target.value;\n\n      _this.setState({\n        formValues: formValues\n      });\n\n      _this.handleValidation(target);\n    };\n\n    _this.handleValidation = function (target) {\n      var name = target.name,\n          value = target.value;\n      var fieldValidationErrors = _this.state.formErrors;\n      var validity = _this.state.formValidity;\n      var isEmail = name === \"email\";\n      var isPassword = name === \"password\";\n      var emailTest = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\n      validity[name] = value.length > 0;\n      fieldValidationErrors[name] = validity[name] ? \"\" : \"\".concat(name, \" is required and cannot be empty\");\n\n      if (validity[name]) {\n        if (isEmail) {\n          validity[name] = emailTest.test(value);\n          fieldValidationErrors[name] = validity[name] ? \"\" : \"\".concat(name, \" should be a valid email address\");\n        }\n\n        if (isPassword) {\n          validity[name] = value.length >= 3;\n          fieldValidationErrors[name] = validity[name] ? \"\" : \"\".concat(name, \" should be 3 characters minimum\");\n        }\n      }\n\n      _this.setState({\n        formErrors: fieldValidationErrors,\n        formValidity: validity\n      });\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        isSubmitting: true\n      });\n\n      var _this$state = _this.state,\n          formValues = _this$state.formValues,\n          formValidity = _this$state.formValidity;\n\n      if (Object.values(formValidity).every(Boolean)) {\n        alert(\"Form is validated! Submitting the form...\");\n\n        _this.setState({\n          isSubmitting: false\n        });\n      } else {\n        for (var key in formValues) {\n          var target = {\n            name: key,\n            value: formValues[key]\n          };\n\n          _this.handleValidation(target);\n        }\n\n        _this.setState({\n          isSubmitting: false\n        });\n      }\n    };\n\n    _this.state = {\n      formValues: {\n        email: \"\",\n        password: \"\"\n      },\n      formErrors: {\n        email: \"\",\n        password: \"\"\n      },\n      formValidity: {\n        email: false,\n        password: false\n      },\n      isSubmitting: false\n    };\n    return _this;\n  }\n\n  _createClass(LoginForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          formValues = _this$state2.formValues,\n          formErrors = _this$state2.formErrors,\n          isSubmitting = _this$state2.isSubmitting;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row mb-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-lg-12 text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"mt-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }\n      }, \"Login Form\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-lg-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }\n      }, \"Email address\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        className: \"form-control \".concat(formErrors.email ? \"is-invalid\" : \"\"),\n        placeholder: \"Enter email\",\n        onChange: this.handleChange,\n        value: formValues.email,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"invalid-feedback\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }\n      }, formErrors.email)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 17\n        }\n      }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        className: \"form-control \".concat(formErrors.password ? \"is-invalid\" : \"\"),\n        placeholder: \"Password\",\n        onChange: this.handleChange,\n        value: formValues.password,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"invalid-feedback\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 17\n        }\n      }, formErrors.password)), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary btn-block\",\n        disabled: isSubmitting,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 15\n        }\n      }, isSubmitting ? \"Please wait...\" : \"Submit\")))));\n    }\n  }]);\n\n  return LoginForm;\n}(React.Component);\n\nvar rootElement = document.getElementById(\"root\");\nReactDOM.render( /*#__PURE__*/React.createElement(LoginForm, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 17\n  }\n}), rootElement);","map":{"version":3,"sources":["/home/moses/projects/sec642-example-apps/lab-hpp/ruby/src/index.js"],"names":["React","ReactDOM","LoginForm","props","handleChange","target","formValues","state","name","value","setState","handleValidation","fieldValidationErrors","formErrors","validity","formValidity","isEmail","isPassword","emailTest","length","test","handleSubmit","event","preventDefault","isSubmitting","Object","values","every","Boolean","alert","key","email","password","Component","rootElement","document","getElementById","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      formValues: {\n        email: \"\",\n        password: \"\"\n      },\n      formErrors: {\n        email: \"\",\n        password: \"\"\n      },\n      formValidity: {\n        email: false,\n        password: false\n      },\n      isSubmitting: false\n    };\n  }\n\n  handleChange = ({ target }) => {\n    const { formValues } = this.state;\n    formValues[target.name] = target.value;\n    this.setState({ formValues });\n    this.handleValidation(target);\n  };\n\n  handleValidation = target => {\n    const { name, value } = target;\n    const fieldValidationErrors = this.state.formErrors;\n    const validity = this.state.formValidity;\n    const isEmail = name === \"email\";\n    const isPassword = name === \"password\";\n    const emailTest = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\n\n    validity[name] = value.length > 0;\n    fieldValidationErrors[name] = validity[name]\n      ? \"\"\n      : `${name} is required and cannot be empty`;\n\n    if (validity[name]) {\n      if (isEmail) {\n        validity[name] = emailTest.test(value);\n        fieldValidationErrors[name] = validity[name]\n          ? \"\"\n          : `${name} should be a valid email address`;\n      }\n      if (isPassword) {\n        validity[name] = value.length >= 3;\n        fieldValidationErrors[name] = validity[name]\n          ? \"\"\n          : `${name} should be 3 characters minimum`;\n      }\n    }\n\n    this.setState({\n      formErrors: fieldValidationErrors,\n      formValidity: validity\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.setState({ isSubmitting: true });\n    const { formValues, formValidity } = this.state;\n    if (Object.values(formValidity).every(Boolean)) {\n      alert(\"Form is validated! Submitting the form...\");\n      this.setState({ isSubmitting: false });\n    } else {\n      for (let key in formValues) {\n        let target = {\n          name: key,\n          value: formValues[key]\n        };\n        this.handleValidation(target);\n      }\n      this.setState({ isSubmitting: false });\n    }\n  };\n\n  render() {\n    const { formValues, formErrors, isSubmitting } = this.state;\n    return (\n      <div className=\"container\">\n        <div className=\"row mb-5\">\n          <div className=\"col-lg-12 text-center\">\n            <h1 className=\"mt-5\">Login Form</h1>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-lg-12\">\n            <form onSubmit={this.handleSubmit}>\n              <div className=\"form-group\">\n                <label>Email address</label>\n                <input\n                  type=\"email\"\n                  name=\"email\"\n                  className={`form-control ${\n                    formErrors.email ? \"is-invalid\" : \"\"\n                  }`}\n                  placeholder=\"Enter email\"\n                  onChange={this.handleChange}\n                  value={formValues.email}\n                />\n                <div className=\"invalid-feedback\">{formErrors.email}</div>\n              </div>\n              <div className=\"form-group\">\n                <label>Password</label>\n                <input\n                  type=\"password\"\n                  name=\"password\"\n                  className={`form-control ${\n                    formErrors.password ? \"is-invalid\" : \"\"\n                  }`}\n                  placeholder=\"Password\"\n                  onChange={this.handleChange}\n                  value={formValues.password}\n                />\n                <div className=\"invalid-feedback\">{formErrors.password}</div>\n              </div>\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary btn-block\"\n                disabled={isSubmitting}\n              >\n                {isSubmitting ? \"Please wait...\" : \"Submit\"}\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<LoginForm />, rootElement);\n\n"]},"metadata":{},"sourceType":"module"}